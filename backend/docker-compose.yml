services:
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    networks:
      - app-network
    restart: always

  flower:
    profiles: ["optional"]
    build:
      context: .
      dockerfile: docker/Dockerfile.celery
    volumes:
      - .:/app
    command: celery -A core.celery_app flower --port=5555 --persistent=True --db=flower.db
    ports:
      - "5555:5555"
    networks:
      - app-network
    restart: always

  celery_worker:
    profiles: ["production"]
    build:
      context: .
      dockerfile: docker/Dockerfile.celery
    volumes:
      - .:/app
      - ./log:/app/log
    command: celery -A core.celery_app worker --loglevel=info
    networks:
      - app-network
    restart: always

  # Monitoring services
  node_exporter:
    profiles: ["production"]
    image: prom/node-exporter
    ports:
      - "9100:9100"
    volumes:
      - ./prometheus/prometheus.yml:/prometheus/prometheus.yml
    networks:
      - app-network

  prometheus:
    profiles: ["production"]
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network
    depends_on:
      - node_exporter
  
  promtail:
    profiles: ["production"]
    image: grafana/promtail:2.8.0
    volumes:
      - ./prometheus/promtail-config.yml:/etc/promtail/config.yml
      - ./promtail_data:/promtail_data
      - .:/app
      - ./log:/app/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - app-network
    depends_on:
       - api
       - celery_worker

networks:
  app-network:
    external: true
