name: Deploy Celery to GCP VM

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-celery-gcp.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup deployment directory
        env:
          GCP_HOST: ${{ secrets.GCP_HOST }}
          GCP_USERNAME: ${{ secrets.GCP_USERNAME }}
          GCP_SSH_KEY: ${{ secrets.GCP_SSH_KEY }}
        run: |
          # SSH 키 설정
          mkdir -p ~/.ssh
          echo "$GCP_SSH_KEY" > ~/.ssh/gcp.key
          chmod 600 ~/.ssh/gcp.key
          
          # GCP VM에 필요한 디렉토리 생성
          ssh -i ~/.ssh/gcp.key -o StrictHostKeyChecking=no $GCP_USERNAME@$GCP_HOST "mkdir -p /home/$GCP_USERNAME/app/celery"

      - name: Copy celery files to GCP VM
        env:
          GCP_HOST: ${{ secrets.GCP_HOST }}
          GCP_USERNAME: ${{ secrets.GCP_USERNAME }}
          GCP_SSH_KEY: ${{ secrets.GCP_SSH_KEY }}
        run: |
          # 셀러리 관련 파일 전송
          rsync -avz -e "ssh -i ~/.ssh/gcp.key -o StrictHostKeyChecking=no" \
            --exclude='.venv' \
            --exclude='__pycache__' \
            --exclude='.pytest_cache' \
            --exclude='.mypy_cache' \
            --exclude='.ruff_cache' \
            --exclude='*.pyc' \
            backend/ $GCP_USERNAME@$GCP_HOST:/home/$GCP_USERNAME/app/celery/

      - name: Deploy and restart Celery services
        env:
          GCP_HOST: ${{ secrets.GCP_HOST }}
          GCP_USERNAME: ${{ secrets.GCP_USERNAME }}
          GCP_SSH_KEY: ${{ secrets.GCP_SSH_KEY }}
        run: |
          ssh -i ~/.ssh/gcp.key -o StrictHostKeyChecking=no $GCP_USERNAME@$GCP_HOST "
            cd /home/$GCP_USERNAME/app/celery && \
            docker-compose -f docker-compose.celery.yml down || true && \
            docker-compose -f docker-compose.celery.yml -f docker-compose.monitoring.yml up -d --build && \
            sleep 5 && \
            docker-compose -f docker-compose.celery.yml ps
          "