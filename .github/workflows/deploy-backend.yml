name: Deploy Backend to EC2

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy backend files to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          # SSH 키 설정
          mkdir -p ~/.ssh
          echo "$EC2_SSH_KEY" > ~/.ssh/ec2.key
          chmod 600 ~/.ssh/ec2.key
          
          # 백엔드 파일 전송
          rsync -avz -e "ssh -i ~/.ssh/ec2.key -o StrictHostKeyChecking=no" \
            --exclude='.venv' \
            --exclude='__pycache__' \
            --exclude='.pytest_cache' \
            --exclude='.mypy_cache' \
            --exclude='.ruff_cache' \
            --exclude='*.pyc' \
            backend/ $EC2_USERNAME@$EC2_HOST:/home/$EC2_USERNAME/app/backend/

      - name: Deploy and restart services
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
        run: |
          ssh -i ~/.ssh/ec2.key -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST << 'EOF'
            cd /home/$EC2_USERNAME/app/backend
            
            # Docker 서비스 재시작
            make docker-down
            make docker-build
            make docker-up -d
            
            # 로그 확인
            make docker-logs
          EOF 